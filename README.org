* Procedural Generation Experiments
** Philosophy
  - Highly interactive
  - Climbing the [[http://worrydream.com/LadderOfAbstraction/][ladder of abstraction]]

** Main Roadmap
   1. Optimize L-System and Turtle execution time and memory consumption
      With the current algorithm, execution time and memory consumption are exponential. Memory consumption is the biggest factor, as several gigabytes can be allocated.
   1. Make an integrated and interactive GUI with = dear imgui, =
   1. Save and load L-system models
   1. Vizualize the turtle moving

** Implemented
   - (Simple) L-systems
   - (Simple) Turtle interpretation
   - Static GUI to disaplay parameters

** Optimization
   First, use valgrind to track memry consumption

   Ideas:
   - Cache L-System (excellent for multiple execution time but awful for memory consumption)
   - Cache multi-iteration production rules (very good for execution time but bad for memory consumption)
   - Condense data types (use binary-encoded instead of 8-bits character?) 

** Development framework
   - *Environment:* debian stretch chroot with these development packages: =g++ make git libsfml-dev googletest=
   - *Dependencies:*
     - SFML / 2.4.1 / [[https://www.sfml-dev.org/][Website]] / installed from packages/
     - dear imgui, / 1.5 / [[https://github.com/ocornut/imgui][Github Repository]] / installed via [[https://github.com/ocornut/imgui/releases/tag/v1.50][release 1.5]]
     - googletest / 1.8.0 / [[https://github.com/google/googletest][Github Repository]] / installed from packages
     - GSL (Guidelines Support Library) / 2017-06-27 / [[https://github.com/Microsoft/GSL][Github Repository]] / cloned from the repository
   - *Coding rule:* [[https://github.com/isocpp/CppCoreGuidelines][ISO C++ Core Guidelines]] with GSL
   - *Compilation:* =make=
   - *Testing suite:* [[https://github.com/google/googletest/][googletest]]

** Completing the framework?:
   - Add Licence
   - Static analysis (Coverity?)
   - Formal documentation (Doxygen?)
   - Automatic cross-compiling?
   - Automatic on-screen serialization?

** Thoughts dump
  - Huge literature on the subject and extremely developed existing software. What does this project bring?

** (Res)sources
[[http://blog.rabidgremlin.com/2014/12/09/procedural-content-generation-l-systems/][Procedural content generation: L-Systems (by Rabidgremlin)]]

[[http://algorithmicbotany.org/papers/#abop][The Algorithmic Beauty of Plants]]
